//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Concurrency8Query =
  TNonstandardUseOfThreadingObjectQuery() or
  TThreadingObjectWithInvalidStorageDurationQuery() or
  TMutexNotInitializedBeforeUseQuery() or
  TMutexInitializedInsideThreadQuery() or
  TMutexInitWithInvalidMutexTypeQuery() or
  TMutexObjectsNotAlwaysUnlockedQuery()

predicate isConcurrency8QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `nonstandardUseOfThreadingObject` query
    Concurrency8Package::nonstandardUseOfThreadingObjectQuery() and
  queryId =
    // `@id` for the `nonstandardUseOfThreadingObject` query
    "c/misra/nonstandard-use-of-threading-object" and
  ruleId = "RULE-22-12" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `threadingObjectWithInvalidStorageDuration` query
    Concurrency8Package::threadingObjectWithInvalidStorageDurationQuery() and
  queryId =
    // `@id` for the `threadingObjectWithInvalidStorageDuration` query
    "c/misra/threading-object-with-invalid-storage-duration" and
  ruleId = "RULE-22-13" and
  category = "required"
  or
  query =
    // `Query` instance for the `mutexNotInitializedBeforeUse` query
    Concurrency8Package::mutexNotInitializedBeforeUseQuery() and
  queryId =
    // `@id` for the `mutexNotInitializedBeforeUse` query
    "c/misra/mutex-not-initialized-before-use" and
  ruleId = "RULE-22-14" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `mutexInitializedInsideThread` query
    Concurrency8Package::mutexInitializedInsideThreadQuery() and
  queryId =
    // `@id` for the `mutexInitializedInsideThread` query
    "c/misra/mutex-initialized-inside-thread" and
  ruleId = "RULE-22-14" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `mutexInitWithInvalidMutexType` query
    Concurrency8Package::mutexInitWithInvalidMutexTypeQuery() and
  queryId =
    // `@id` for the `mutexInitWithInvalidMutexType` query
    "c/misra/mutex-init-with-invalid-mutex-type" and
  ruleId = "RULE-22-14" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `mutexObjectsNotAlwaysUnlocked` query
    Concurrency8Package::mutexObjectsNotAlwaysUnlockedQuery() and
  queryId =
    // `@id` for the `mutexObjectsNotAlwaysUnlocked` query
    "c/misra/mutex-objects-not-always-unlocked" and
  ruleId = "RULE-22-16" and
  category = "required"
}

module Concurrency8Package {
  Query nonstandardUseOfThreadingObjectQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `nonstandardUseOfThreadingObject` query
      TQueryC(TConcurrency8PackageQuery(TNonstandardUseOfThreadingObjectQuery()))
  }

  Query threadingObjectWithInvalidStorageDurationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `threadingObjectWithInvalidStorageDuration` query
      TQueryC(TConcurrency8PackageQuery(TThreadingObjectWithInvalidStorageDurationQuery()))
  }

  Query mutexNotInitializedBeforeUseQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `mutexNotInitializedBeforeUse` query
      TQueryC(TConcurrency8PackageQuery(TMutexNotInitializedBeforeUseQuery()))
  }

  Query mutexInitializedInsideThreadQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `mutexInitializedInsideThread` query
      TQueryC(TConcurrency8PackageQuery(TMutexInitializedInsideThreadQuery()))
  }

  Query mutexInitWithInvalidMutexTypeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `mutexInitWithInvalidMutexType` query
      TQueryC(TConcurrency8PackageQuery(TMutexInitWithInvalidMutexTypeQuery()))
  }

  Query mutexObjectsNotAlwaysUnlockedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `mutexObjectsNotAlwaysUnlocked` query
      TQueryC(TConcurrency8PackageQuery(TMutexObjectsNotAlwaysUnlockedQuery()))
  }
}
