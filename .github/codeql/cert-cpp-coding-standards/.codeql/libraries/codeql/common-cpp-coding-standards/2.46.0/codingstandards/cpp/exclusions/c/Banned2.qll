//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Banned2Query = TCallToBannedRandomFunctionQuery()

predicate isBanned2QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `callToBannedRandomFunction` query
    Banned2Package::callToBannedRandomFunctionQuery() and
  queryId =
    // `@id` for the `callToBannedRandomFunction` query
    "c/misra/call-to-banned-random-function" and
  ruleId = "RULE-21-24" and
  category = "required"
}

module Banned2Package {
  Query callToBannedRandomFunctionQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `callToBannedRandomFunction` query
      TQueryC(TBanned2PackageQuery(TCallToBannedRandomFunctionQuery()))
  }
}
