//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Concurrency6Query =
  TNotNoDeadlocksBetweenThreadsQuery() or
  TThreadCreatedByThreadQuery() or
  TBannedDynamicThreadCreationQuery() or
  TAtomicAggregateObjectDirectlyAccessedQuery() or
  TInvalidMemoryOrderArgumentQuery() or
  TThreadPreviouslyJoinedOrDetachedQuery()

predicate isConcurrency6QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `notNoDeadlocksBetweenThreads` query
    Concurrency6Package::notNoDeadlocksBetweenThreadsQuery() and
  queryId =
    // `@id` for the `notNoDeadlocksBetweenThreads` query
    "c/misra/not-no-deadlocks-between-threads" and
  ruleId = "DIR-5-2" and
  category = "required"
  or
  query =
    // `Query` instance for the `threadCreatedByThread` query
    Concurrency6Package::threadCreatedByThreadQuery() and
  queryId =
    // `@id` for the `threadCreatedByThread` query
    "c/misra/thread-created-by-thread" and
  ruleId = "DIR-5-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `bannedDynamicThreadCreation` query
    Concurrency6Package::bannedDynamicThreadCreationQuery() and
  queryId =
    // `@id` for the `bannedDynamicThreadCreation` query
    "c/misra/banned-dynamic-thread-creation" and
  ruleId = "DIR-5-3" and
  category = "required"
  or
  query =
    // `Query` instance for the `atomicAggregateObjectDirectlyAccessed` query
    Concurrency6Package::atomicAggregateObjectDirectlyAccessedQuery() and
  queryId =
    // `@id` for the `atomicAggregateObjectDirectlyAccessed` query
    "c/misra/atomic-aggregate-object-directly-accessed" and
  ruleId = "RULE-12-6" and
  category = "required"
  or
  query =
    // `Query` instance for the `invalidMemoryOrderArgument` query
    Concurrency6Package::invalidMemoryOrderArgumentQuery() and
  queryId =
    // `@id` for the `invalidMemoryOrderArgument` query
    "c/misra/invalid-memory-order-argument" and
  ruleId = "RULE-21-25" and
  category = "required"
  or
  query =
    // `Query` instance for the `threadPreviouslyJoinedOrDetached` query
    Concurrency6Package::threadPreviouslyJoinedOrDetachedQuery() and
  queryId =
    // `@id` for the `threadPreviouslyJoinedOrDetached` query
    "c/misra/thread-previously-joined-or-detached" and
  ruleId = "RULE-22-11" and
  category = "required"
}

module Concurrency6Package {
  Query notNoDeadlocksBetweenThreadsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `notNoDeadlocksBetweenThreads` query
      TQueryC(TConcurrency6PackageQuery(TNotNoDeadlocksBetweenThreadsQuery()))
  }

  Query threadCreatedByThreadQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `threadCreatedByThread` query
      TQueryC(TConcurrency6PackageQuery(TThreadCreatedByThreadQuery()))
  }

  Query bannedDynamicThreadCreationQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `bannedDynamicThreadCreation` query
      TQueryC(TConcurrency6PackageQuery(TBannedDynamicThreadCreationQuery()))
  }

  Query atomicAggregateObjectDirectlyAccessedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `atomicAggregateObjectDirectlyAccessed` query
      TQueryC(TConcurrency6PackageQuery(TAtomicAggregateObjectDirectlyAccessedQuery()))
  }

  Query invalidMemoryOrderArgumentQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `invalidMemoryOrderArgument` query
      TQueryC(TConcurrency6PackageQuery(TInvalidMemoryOrderArgumentQuery()))
  }

  Query threadPreviouslyJoinedOrDetachedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `threadPreviouslyJoinedOrDetached` query
      TQueryC(TConcurrency6PackageQuery(TThreadPreviouslyJoinedOrDetachedQuery()))
  }
}
