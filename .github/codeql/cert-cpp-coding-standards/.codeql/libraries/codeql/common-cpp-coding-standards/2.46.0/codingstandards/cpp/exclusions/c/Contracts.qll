//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype ContractsQuery =
  TDoNotViolateInLineLinkageConstraintsQuery() or
  TCheckMathLibraryFunctionParametersQuery() or
  TLowPrecisionPeriodicTrigonometricFunctionCallQuery() or
  TFunctionErrorInformationUntestedQuery()

predicate isContractsQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `doNotViolateInLineLinkageConstraints` query
    ContractsPackage::doNotViolateInLineLinkageConstraintsQuery() and
  queryId =
    // `@id` for the `doNotViolateInLineLinkageConstraints` query
    "c/cert/do-not-violate-in-line-linkage-constraints" and
  ruleId = "MSC40-C" and
  category = "rule"
  or
  query =
    // `Query` instance for the `checkMathLibraryFunctionParameters` query
    ContractsPackage::checkMathLibraryFunctionParametersQuery() and
  queryId =
    // `@id` for the `checkMathLibraryFunctionParameters` query
    "c/misra/check-math-library-function-parameters" and
  ruleId = "DIR-4-11" and
  category = "required"
  or
  query =
    // `Query` instance for the `lowPrecisionPeriodicTrigonometricFunctionCall` query
    ContractsPackage::lowPrecisionPeriodicTrigonometricFunctionCallQuery() and
  queryId =
    // `@id` for the `lowPrecisionPeriodicTrigonometricFunctionCall` query
    "c/misra/low-precision-periodic-trigonometric-function-call" and
  ruleId = "DIR-4-11" and
  category = "required"
  or
  query =
    // `Query` instance for the `functionErrorInformationUntested` query
    ContractsPackage::functionErrorInformationUntestedQuery() and
  queryId =
    // `@id` for the `functionErrorInformationUntested` query
    "c/misra/function-error-information-untested" and
  ruleId = "DIR-4-7" and
  category = "required"
}

module ContractsPackage {
  Query doNotViolateInLineLinkageConstraintsQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `doNotViolateInLineLinkageConstraints` query
      TQueryC(TContractsPackageQuery(TDoNotViolateInLineLinkageConstraintsQuery()))
  }

  Query checkMathLibraryFunctionParametersQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `checkMathLibraryFunctionParameters` query
      TQueryC(TContractsPackageQuery(TCheckMathLibraryFunctionParametersQuery()))
  }

  Query lowPrecisionPeriodicTrigonometricFunctionCallQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `lowPrecisionPeriodicTrigonometricFunctionCall` query
      TQueryC(TContractsPackageQuery(TLowPrecisionPeriodicTrigonometricFunctionCallQuery()))
  }

  Query functionErrorInformationUntestedQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionErrorInformationUntested` query
      TQueryC(TContractsPackageQuery(TFunctionErrorInformationUntestedQuery()))
  }
}
