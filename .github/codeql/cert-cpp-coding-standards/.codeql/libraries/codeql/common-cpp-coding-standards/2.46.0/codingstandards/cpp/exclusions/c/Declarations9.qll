//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Declarations9Query = TAtomicQualifierAppliedToVoidQuery()

predicate isDeclarations9QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `atomicQualifierAppliedToVoid` query
    Declarations9Package::atomicQualifierAppliedToVoidQuery() and
  queryId =
    // `@id` for the `atomicQualifierAppliedToVoid` query
    "c/misra/atomic-qualifier-applied-to-void" and
  ruleId = "RULE-11-10" and
  category = "required"
}

module Declarations9Package {
  Query atomicQualifierAppliedToVoidQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `atomicQualifierAppliedToVoid` query
      TQueryC(TDeclarations9PackageQuery(TAtomicQualifierAppliedToVoidQuery()))
  }
}
