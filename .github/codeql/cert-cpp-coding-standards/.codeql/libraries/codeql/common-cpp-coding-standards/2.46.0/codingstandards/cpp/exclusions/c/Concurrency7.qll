//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype Concurrency7Query =
  TUninitializedAtomicObjectQuery() or
  TTimedlockOnInappropriateMutexTypeQuery()

predicate isConcurrency7QueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `uninitializedAtomicObject` query
    Concurrency7Package::uninitializedAtomicObjectQuery() and
  queryId =
    // `@id` for the `uninitializedAtomicObject` query
    "c/misra/uninitialized-atomic-object" and
  ruleId = "RULE-9-7" and
  category = "mandatory"
  or
  query =
    // `Query` instance for the `timedlockOnInappropriateMutexType` query
    Concurrency7Package::timedlockOnInappropriateMutexTypeQuery() and
  queryId =
    // `@id` for the `timedlockOnInappropriateMutexType` query
    "c/misra/timedlock-on-inappropriate-mutex-type" and
  ruleId = "RULE-21-26" and
  category = "required"
}

module Concurrency7Package {
  Query uninitializedAtomicObjectQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `uninitializedAtomicObject` query
      TQueryC(TConcurrency7PackageQuery(TUninitializedAtomicObjectQuery()))
  }

  Query timedlockOnInappropriateMutexTypeQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `timedlockOnInappropriateMutexType` query
      TQueryC(TConcurrency7PackageQuery(TTimedlockOnInappropriateMutexTypeQuery()))
  }
}
